// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_iGyuerD6w3jR@ep-dry-sound-a88mmwyi.eastus2.azure.neon.tech/neondb?sslmode=require"
}

model User {
  id               String         @id @default(uuid())
  email            String         @unique
  name             String?
  image            String?
  messagesSent     Message[]      @relation("SentMessages")
  messagesReceived Message[]      @relation("ReceivedMessages")
  notifications    Notification[]
}

model Message {
  id           String         @id @default(uuid())
  msg          String
  senderId     String
  receiverId   String
  createdAt    DateTime       @default(now())
  sender       User           @relation("SentMessages", fields: [senderId], references: [id])
  receiver     User           @relation("ReceivedMessages", fields: [receiverId], references: [id])
  Notification Notification[] @relation("MessageNotifications")
}

model Notification {
  id        String   @id @default(uuid())
  messageId String?
  userId    String // The user who will see the notification
  content   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  message   Message? @relation("MessageNotifications", fields: [messageId], references: [id])
}
